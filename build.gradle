ext.version = '0.0.6'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        mavenRepo url: 'http://oss.sonatype.org/content/repositories/releases/'
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        // for netty
        mavenRepo url: 'http://repository.jboss.org/nexus/content/groups/public/'

        // for spock and asyncHttp
        mavenRepo url: 'http://oss.sonatype.org/content/repositories/snapshots/'
    }

    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'idea'
    sourceSets.main.groovy.srcDirs = ["src/main/groovy"]

    groovydoc.groovyClasspath = configurations.default

    idea.module {
        ext.gradleCacheVariable = 'GRADLE_CACHE'
        ext.downloadJavadoc = true
    }

    idea.project {
        ext.jdkName = '1.7'
        ext.wildcards = ['!?*.java', '!?*.groovy']
    }

    ext.groovy = "org.codehaus.groovy:groovy-all:2.0.5"
    ext.junit = 'junit:junit:4.10'
    ext.spock = "org.spockframework:spock-core:0.7-groovy-2.0"

    dependencies {
        groovy groovy
        compile groovy
        testCompile junit
        testCompile spock
    }

    task testJar(type: Jar, dependsOn: testClasses) {
        baseName = "test-${project.archivesBaseName}"
        from sourceSets.test.output
    }

    configurations {
        tests
    }

    artifacts {
        tests testJar
    }

    test {
        String testType = System.properties['test.type']
        if (testType == 'integration') {
            include '**/*IntegrationTest.*'
            include '**/*IntegrationSpec.*'
        } else if (testType == 'unit') {
            include '**/*Test.*'
            include '**/*Spec.*'
            exclude '**/*IntegrationTest.*'
            exclude '**/*IntegrationSpec.*'
        } else if (testType == 'all') {
            include '**/*Test.*'
            include '**/*Spec.*'
        } else {
            //Default to unit
            include '**/*Test.*'
            include '**/*Spec.*'
            exclude '**/*IntegrationTest.*'
            exclude '**/*IntegrationSpec.*'
        }

        // Prints results of test inline
        afterSuite { desc, result ->
            // Don't report on modules with no test suites
            if (!desc.className) {
                return
            }

            String testStatus
            if (System.properties['nocolor']) {
                testStatus = result.resultType
            } else if (result.resultType != org.gradle.api.tasks.testing.TestResult.ResultType.SUCCESS) {
                // Print in red if failed
                testStatus = "\033[31m${result.resultType}\033[0m"
            } else {
                // Print in green if success/skipped
                testStatus = "\033[32m${result.resultType}\033[0m"
            }
            println "Test suite ${desc.name}: ${testStatus}"
        }
    }

    task integrationTest(type: Test) {
        description = 'Runs the integration tests :D'
        group = 'Verification'
        include '**/*IntegrationTest.*'
        include '**/*IntegrationSpec.*'
        afterSuite { desc, result ->
            if (desc.className)
                println "Test suite ${desc.name}: ${result.resultType}"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.3'
}
